# Generated by Django 3.2.7 on 2021-10-27 07:50

import datetime
from django.db import migrations, models
import django.db.models.manager
import eNews.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('year_ref', models.PositiveIntegerField(
                    default=eNews.models.current_year, verbose_name='Année de rédaction du document')),
                ('number_ref', models.PositiveIntegerField(
                    default=999, verbose_name='Numéro du document')),
                ('begin_date', models.DateField(default=datetime.date.today,
                 verbose_name='Date de début de validité')),
                ('end_date', models.DateField(blank=True, default=None,
                 null=True, verbose_name='Date de fin de validité')),
                ('creation_date', models.DateField(
                    default=datetime.date.today, verbose_name='Date de création')),
                ('publication_date', models.DateField(
                    default=datetime.date.today, verbose_name='Date de publication')),
                ('reminder_sent', models.BooleanField(
                    default=False, verbose_name='Mail de rappel envoyé')),
                ('included', models.BooleanField(default=False,
                 help_text='Cette publication a été intégré ailleurs (par ex dans le MANEX, ...)', verbose_name='Inclus au MANEX')),
                ('archived', models.BooleanField(default=False,
                 help_text="Le PDF est supprimé du serveur pour économiser de l'espace", verbose_name='Archivé')),
                ('obsolescence_date', models.DateField(default=eNews.models.get_default_obsolescence_date,
                 help_text='Après cette date, le document peut être archivé.', verbose_name='Date de fin de disponibilité eNews')),
                ('delete_on_archive', models.BooleanField(default=False,
                 help_text='Après la date de fin de disponibilité, le document sera supprimer complètement de la base de données.', verbose_name='Supprimer complètement en fin de vie')),
                ('title', models.CharField(default=None,
                 max_length=250, verbose_name='Titre du document')),
                ('descriptive', models.TextField(blank=True, default=None,
                 null=True, verbose_name='Description du contenu du document')),
                ('file', models.FileField(blank=True, max_length=251, null=True,
                 upload_to='enews_docs/%Y/%m/', verbose_name='Doc (au format PDF)')),
            ],
            options={
                'verbose_name': 'doc',
                'verbose_name_plural': 'docs',
                'ordering': ['-publication_date'],
            },
            managers=[
                ('simple_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='', max_length=100,
                 null=True, verbose_name='Nom complet du type de documentation')),
                ('short_name', models.CharField(default='', max_length=15, null=True,
                 unique=True, verbose_name='Abréviation du type de documentation')),
                ('archive_path', models.CharField(blank=True, max_length=250,
                 null=True, verbose_name="Chemin vers l'archivage long durée")),
            ],
            options={
                'verbose_name': 'type de documentation',
                'verbose_name_plural': 'types de documentation',
                'ordering': ['short_name'],
            },
        ),
        migrations.CreateModel(
            name='Statut',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('statut_name', models.CharField(max_length=50,
                 unique=True, verbose_name='Nom du statut')),
            ],
            options={
                'verbose_name': 'Statut',
                'verbose_name_plural': 'Statuts',
                'ordering': ['statut_name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit_doc', models.BooleanField(
                    default=False, verbose_name='Peut créer/màj/supprimer')),
                ('reminder_recipient', models.BooleanField(
                    default=False, verbose_name='Reçoit les emails de rappels')),
                ('mandatory_statuts', models.ManyToManyField(blank=True, default=None, limit_choices_to={
                 'mix_statuts': None}, related_name='mandatory_statuts_profile', to='eNews.Statut', verbose_name='Statuts associés obligatoires')),
            ],
            options={
                'verbose_name': 'Profil utilisateur eNews',
                'verbose_name_plural': 'Profils utilisateurs eNews',
            },
        ),
    ]
